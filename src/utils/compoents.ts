// --- types for SVG entries ---
export type SvgEntry = {
    path: string;
    viewBox: string;
    fill: string;
    stroke: string;
};

// --- SVG Path data for different table types (now with entry-gate and exit-gate) ---
export const TABLE_SVG_PATHS: Record<string,SvgEntry> = {
    "table-2": {
        path: "M51 1 C78.6142 1 101 23.3858 101 51 C101 78.6142 78.6142 101 51 101 C23.3858 101 1 78.6142 1 51 C1 23.3858 23.3858 1 51 1 Z M51 16 C70.3299 16 86 31.6701 86 51 C86 70.3299 70.3299 86 51 86 C31.6701 86 16 70.3299 16 51 C16 31.6701 31.6701 16 51 16 Z M51 21 C67.5685 21 81 34.4315 81 51 C81 67.5685 67.5685 81 51 81 C34.4315 81 21 67.5685 21 51 C21 34.4315 34.4315 21 51 21 Z",
        viewBox: "0 0 102 102",
        fill: "#8B4513",
        stroke: "#654321"
    },
    "table-4": {
        path: "M11 1 L91 1 C96.5228 1 101 5.47715 101 11 L101 91 C101 96.5228 96.5228 101 91 101 L11 101 C5.47715 101 1 96.5228 1 91 L1 11 C1 5.47715 5.47715 1 11 1 Z M16 6 L86 6 C88.7614 6 91 8.23858 91 11 L91 91 C91 93.7614 88.7614 96 86 96 L16 96 C13.2386 96 11 93.7614 11 91 L11 11 C11 8.23858 13.2386 6 16 6 Z M21 11 L81 11 C83.7614 11 86 13.2386 86 16 L86 86 C86 88.7614 83.7614 91 81 91 L21 91 C18.2386 91 16 88.7614 16 86 L16 16 C16 13.2386 18.2386 11 21 11 Z",
        viewBox: "0 0 102 102",
        fill: "#8B4513",
        stroke: "#654321"
    },
    "table-6": {
        path: ` M2 2 H88 A2 2 0 0 1 90 4 V58 A2 2 0 0 1 88 60 H2 A2 2 0 0 1 0 58 V4 A2 2 0 0 1 2 2 Z
        M6 6 H84 V54 H6 V6 Z
        `,
        viewBox: "0 0 90 62",
        fill: "#8B4513",   // wood brown
        stroke: "#654321", // darker edge
    },

    "table-8": {
        path: `M40 5 H110 A35 35 0 0 1 145 40 V110 A35 35 0 0 1 110 145 H40 A35 35 0 0 1 5 110 V40 A35 35 0 0 1 40 5 Z M40 25 H110 A15 15 0 0 1 125 40 V110 A15 15 0 0 1 110 125 H40 A15 15 0 0 1 25 110 V40 A15 15 0 0 1 40 25 Z
        `,
        viewBox: "0 0 150 150",
        fill: "#8B4513",
        stroke: "#654321",
    },
    "table-12": {
        path: "M101 1 C156.228 1 201 23.3858 201 51 L201 91 C201 118.614 156.228 141 101 141 C45.7715 141 1 118.614 1 91 L1 51 C1 23.3858 45.7715 1 101 1 Z M101 16 C146.563 16 181 33.4264 181 54 L181 88 C181 108.574 146.563 126 101 126 C55.4365 126 21 108.574 21 88 L21 54 C21 33.4264 55.4365 16 101 16 Z M101 21 C143.645 21 176 36.8629 176 56 L176 86 C176 105.137 143.645 121 101 121 C58.3553 121 26 105.137 26 86 L26 56 C26 36.8629 58.3553 21 101 21 Z",
        viewBox: "0 0 202 142",
        fill: "#8B4513",
        stroke: "#654321"
    },
    washroom: {
        // Elegant washroom with realistic door design and better contrast
        path: `M6 2 L94 2 Q98 2 98 6 L98 94 Q98 98 94 98 L6 98 Q2 98 2 94 L2 6 Q2 2 6 2 Z
                M10 8 L90 8 Q92 8 92 10 L92 90 Q92 92 90 92 L10 92 Q8 92 8 90 L8 10 Q8 8 10 8 Z
                M17 20 L83 20 Q85 20 85 22 L85 93 Q85 95 83 95 L17 95 Q15 95 15 93 L15 22 Q15 20 17 20 Z
                M20 23 L80 23 Q81 23 81 24 L81 90 Q81 91 80 91 L20 91 Q19 91 19 90 L19 24 Q19 23 20 23 Z
                M73 48 Q75 48 75 50 Q75 52 73 52 Q71 52 71 50 Q71 48 73 48 Z
                M31 31 Q35 31 35 35 Q35 39 31 39 Q27 39 27 35 Q27 31 31 31 Z
                M33 42 L37 42 L37 57 L33 57 Z M30 57 L34 57 L34 69 L30 69 Z M36 57 L40 57 L40 69 L36 69 Z
                M29 42 L31 42 L31 50 L29 50 Z M39 42 L41 42 L41 50 L39 50 Z
                M56 31 Q60 31 60 35 Q60 39 56 39 Q52 39 52 35 Q52 31 56 31 Z
                M55 42 L65 42 L67 52 L53 52 Z M55 52 L59 52 L59 69 L55 69 Z M61 52 L65 52 L65 69 L61 69 Z
                M54 42 L56 42 L56 50 L54 50 Z M66 42 L68 42 L68 50 L66 50 Z`,
        viewBox: "0 0 100 100",
        fill: "#E5E7EB",
        stroke: "#6B7280"
    },
    counter: {
        // Modern rectangular counter with professional colors
        path: `M8 25 Q5 25 5 28 L5 72 Q5 75 8 75 L92 75 Q95 75 95 72 L95 28 Q95 25 92 25 Z
                M10 28 Q8 28 8 30 L8 70 Q8 72 10 72 L90 72 Q92 72 92 70 L92 30 Q92 30 90 28 Z
                M7 20 Q3 20 3 24 L3 24 Q3 28 7 28 L93 28 Q97 28 97 24 L97 24 Q97 20 93 20 Z
                M9 22 Q5 22 5 24 L5 24 Q5 26 9 26 L91 26 Q95 26 95 24 L95 24 Q95 22 91 22 Z
                M22 35 Q20 35 20 37 L20 48 Q20 50 22 50 L43 50 Q45 50 45 48 L45 37 Q45 35 43 35 Z
                M24 37 Q22 37 22 39 L22 46 Q22 48 24 48 L41 48 Q43 48 43 46 L43 39 Q43 37 41 37 Z
                M50 35 L54 35 L54 39 L50 39 Z M56 35 L60 35 L60 39 L56 39 Z M62 35 L66 35 L66 39 L62 39 Z
                M17 52 Q15 52 15 54 L15 62 Q15 64 17 64 L65 64 Q67 64 67 62 L67 54 Q67 52 65 52 Z
                M19 54 Q17 54 17 56 L17 60 Q17 62 19 62 L63 62 Q65 62 65 60 L65 56 Q65 54 63 54 Z
                M58 56 Q60 56 60 58 Q60 60 58 60 Q56 60 56 58 Q56 56 58 56 Z`,
        viewBox: "0 0 100 100",
        fill: "#3B82F6",
        stroke: "#1E40AF"
    },
    "entry-gate": {
        // Simple rectangular entry gate with arrow pointing right (inward)
        path: `M8 15 Q5 15 5 18 L5 82 Q5 85 8 85 L92 85 Q95 85 95 82 L95 18 Q95 15 92 15 Z
                M10 18 Q8 18 8 20 L8 80 Q8 82 10 82 L90 82 Q92 82 92 80 L92 20 Q92 18 90 18 Z
                M14 25 Q12 25 12 27 L12 73 Q12 75 14 75 L86 75 Q88 75 88 73 L88 27 Q88 25 86 25 Z
                M30 40 L60 40 L60 35 L75 50 L60 65 L60 60 L30 60 Z`,
        viewBox: "0 0 100 100",
        fill: "#10B981",
        stroke: "#059669",
    },
    "exit-gate": {
        // Exit gate with clear arrow pointing left (outward)
        path: `M10 15 L90 15 L90 85 L10 85 Z M15 20 L85 20 L85 80 L15 80 Z
                M15 30 L80 30 L80 70 L15 70 Z
                M75 40 L50 40 L50 30 L30 50 L50 70 L50 60 L75 60 Z
                M70 35 L75 35 L75 37 L70 37 Z M70 63 L75 63 L75 65 L70 65 Z
                M60 35 L65 35 L65 37 L60 37 Z M60 63 L65 63 L65 65 L60 65 Z`,
        viewBox: "0 0 100 100",
        fill: "#EF4444",
        stroke: "#B91C1C",
    },
} as const satisfies Record<string, SvgEntry>; // helpful TS inference

// --- helper type for keys ---
export type SvgKey = keyof typeof TABLE_SVG_PATHS;